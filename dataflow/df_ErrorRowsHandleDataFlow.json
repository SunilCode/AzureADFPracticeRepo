{
	"name": "df_ErrorRowsHandleDataFlow",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "dsSalesDataCSV",
						"type": "DatasetReference"
					},
					"name": "srcSalesData"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "dsAzureSalesBadDataSet",
						"type": "DatasetReference"
					},
					"name": "sinkSalesBadData"
				},
				{
					"dataset": {
						"referenceName": "dsAzureSalesGoodData",
						"type": "DatasetReference"
					},
					"name": "sinkSalesGoodData"
				}
			],
			"transformations": [
				{
					"name": "ConditionalSpilt"
				},
				{
					"name": "derivedColumnFileName"
				},
				{
					"name": "derivedColu"
				}
			],
			"scriptLines": [
				"source(output(",
				"          ORDERNUMBER as string,",
				"          QUANTITYORDERED as string,",
				"          PRICEEACH as string,",
				"          ORDERLINENUMBER as string,",
				"          SALES as string,",
				"          ORDERDATE as string,",
				"          STATUS as string,",
				"          QTR_ID as string,",
				"          MONTH_ID as string,",
				"          YEAR_ID as string,",
				"          PRODUCTLINE as string,",
				"          MSRP as string,",
				"          PRODUCTCODE as string,",
				"          CUSTOMERNAME as string,",
				"          PHONE as string,",
				"          ADDRESSLINE1 as string,",
				"          ADDRESSLINE2 as string,",
				"          CITY as string,",
				"          STATE as string,",
				"          POSTALCODE as string,",
				"          COUNTRY as string,",
				"          TERRITORY as string,",
				"          CONTACTLASTNAME as string,",
				"          CONTACTFIRSTNAME as string,",
				"          DEALSIZE as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> srcSalesData",
				"srcSalesData split(isNull(toDate(ORDERDATE,'mm/dd/yyyy')),",
				"     disjoint: false) ~> ConditionalSpilt@(ErrorRows, GoodRows)",
				"ConditionalSpilt@ErrorRows derive(fileName = \"sales_data_sample.csv\",",
				"          ORDERDATE = toString(ORDERDATE)) ~> derivedColumnFileName",
				"ConditionalSpilt@GoodRows derive(fileName = \"sale_data_sample.csv\",",
				"          ORDERDATE = toDate(ORDERDATE, 'mm/dd/yyyy', 'IN')) ~> derivedColu",
				"derivedColumnFileName sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          ORDERNUMBER as integer,",
				"          QUANTITY_ORDERED as integer,",
				"          PRICEEACH as double,",
				"          ORDERLINENUMBER as integer,",
				"          SALES as double,",
				"          ORDERDATE as string,",
				"          STATUS as string,",
				"          QTR_ID as integer,",
				"          MONTH_ID as integer,",
				"          YEAR_ID as integer,",
				"          PRODUCTLINE as string,",
				"          MSRP as integer,",
				"          PRODUCTCODE as string,",
				"          CUSTOMERNAME as string,",
				"          PHONE as string,",
				"          ADDRESSLINE1 as string,",
				"          ADDRESSLINE2 as string,",
				"          CITY as string,",
				"          STATE as string,",
				"          POSTALCODE as integer,",
				"          COUNTRY as string,",
				"          TERRITORY as string,",
				"          CONTACTLASTNAME as string,",
				"          CONTACTFIRSTNAME as string,",
				"          DEALSIZE as string,",
				"          FileName as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          ORDERNUMBER,",
				"          QUANTITY_ORDERED = QUANTITYORDERED,",
				"          PRICEEACH,",
				"          ORDERLINENUMBER,",
				"          SALES,",
				"          ORDERDATE,",
				"          STATUS,",
				"          QTR_ID,",
				"          MONTH_ID,",
				"          YEAR_ID,",
				"          PRODUCTLINE,",
				"          MSRP,",
				"          PRODUCTCODE,",
				"          CUSTOMERNAME,",
				"          PHONE,",
				"          ADDRESSLINE1,",
				"          ADDRESSLINE2,",
				"          CITY,",
				"          STATE,",
				"          POSTALCODE,",
				"          COUNTRY,",
				"          TERRITORY,",
				"          CONTACTLASTNAME,",
				"          CONTACTFIRSTNAME,",
				"          DEALSIZE,",
				"          FileName = fileName",
				"     )) ~> sinkSalesBadData",
				"derivedColu sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          ORDERNUMBER as integer,",
				"          QUANTITY_ORDERED as integer,",
				"          PRICEEACH as double,",
				"          ORDERLINENUMBER as integer,",
				"          SALES as double,",
				"          ORDERDATE as date,",
				"          STATUS as string,",
				"          QTR_ID as integer,",
				"          MONTH_ID as integer,",
				"          YEAR_ID as integer,",
				"          PRODUCTLINE as string,",
				"          MSRP as integer,",
				"          PRODUCTCODE as string,",
				"          CUSTOMERNAME as string,",
				"          PHONE as string,",
				"          ADDRESSLINE1 as string,",
				"          ADDRESSLINE2 as string,",
				"          CITY as string,",
				"          STATE as string,",
				"          POSTALCODE as integer,",
				"          COUNTRY as string,",
				"          TERRITORY as string,",
				"          CONTACTLASTNAME as string,",
				"          CONTACTFIRSTNAME as string,",
				"          DEALSIZE as string,",
				"          FileName as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          ORDERNUMBER,",
				"          QUANTITY_ORDERED = QUANTITYORDERED,",
				"          PRICEEACH,",
				"          ORDERLINENUMBER,",
				"          SALES,",
				"          ORDERDATE,",
				"          STATUS,",
				"          QTR_ID,",
				"          MONTH_ID,",
				"          YEAR_ID,",
				"          PRODUCTLINE,",
				"          MSRP,",
				"          PRODUCTCODE,",
				"          CUSTOMERNAME,",
				"          PHONE,",
				"          ADDRESSLINE1,",
				"          ADDRESSLINE2,",
				"          CITY,",
				"          STATE,",
				"          POSTALCODE,",
				"          COUNTRY,",
				"          TERRITORY,",
				"          CONTACTLASTNAME,",
				"          CONTACTFIRSTNAME,",
				"          DEALSIZE,",
				"          FileName = fileName",
				"     )) ~> sinkSalesGoodData"
			]
		}
	}
}