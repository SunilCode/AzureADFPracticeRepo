{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-forprcatice1"
		},
		"LinkedServiceAzureBlob_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LinkedServiceAzureBlob'"
		},
		"LinkedServiceDataLakeGen2_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'LinkedServiceDataLakeGen2'"
		},
		"LinkedServicesBlobStorage_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LinkedServicesBlobStorage'"
		},
		"adls_connection3_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'adls_connection3'"
		},
		"azureDB_connection_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'azureDB_connection'"
		},
		"linkedServiceSQLDatabaseParameterised_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'linkedServiceSQLDatabaseParameterised'"
		},
		"HttpServer1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://file-examples.com/wp-content/uploads/2017/02/zip_2MB.zip"
		},
		"LinkedServiceDataLakeGen2_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://adlsstorage1gen2.dfs.core.windows.net/"
		},
		"RestService1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://reqres.in/api/users"
		},
		"adls_connection3_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://adlsstorage1gen2.dfs.core.windows.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pl_001_CopySpecificFilesWithinAdls')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopySpecificFiles",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"fileListPath": "sourcecontainer/MetaDataFile.txt",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SourceTextFiles",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "TargetTextFiles",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-03-10T06:55:25Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceTextFiles')]",
				"[concat(variables('factoryId'), '/datasets/TargetTextFiles')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_002_CopyFileToDB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyFileToDB",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "FileName",
										"value": "$$FILEPATH"
									},
									{
										"name": "InsertTimeStamp",
										"value": {
											"value": "@utcnow()",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": false,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SourceTextFileCustomer",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "TargetAzureDBCustomer",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-03-10T07:27:42Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceTextFileCustomer')]",
				"[concat(variables('factoryId'), '/datasets/TargetAzureDBCustomer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_003_SetVariable')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SetString",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "StringVar",
							"value": "10"
						}
					},
					{
						"name": "SetNumber",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "NumberVar",
							"value": "20"
						}
					},
					{
						"name": "SetTimeStamp",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "TimeStampVar",
							"value": {
								"value": "@utcnow()",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"StringVar": {
						"type": "String"
					},
					"NumberVar": {
						"type": "String"
					},
					"TimeStampVar": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2023-03-10T10:14:03Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_004_ForEach')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEachCountry",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.ParamCountries",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "SetVarCountries",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "VarCountryName",
										"value": {
											"value": "@item()",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"ParamCountries": {
						"type": "array",
						"defaultValue": [
							"India",
							"US",
							"UK",
							"Germany"
						]
					}
				},
				"variables": {
					"VarCountryName": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2023-03-10T10:39:41Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_004_GetMetaData')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetFolderMetadata",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "SourceTextFiles",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-03-10T10:22:13Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceTextFiles')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_005_AppendVariable')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEachCountry",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.ParamCountries",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Append variableCountry",
									"type": "AppendVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "CountryName",
										"value": {
											"value": "@item()",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "SetVarAllCountries",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "ForEachCountry",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "CountriesOutput",
							"value": {
								"value": "@variables('CountryName')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"ParamCountries": {
						"type": "array",
						"defaultValue": [
							"India",
							"US",
							"UK",
							"Germany"
						]
					}
				},
				"variables": {
					"CountriesOutput": {
						"type": "Array"
					},
					"CountryName": {
						"type": "Array"
					}
				},
				"annotations": [],
				"lastPublishTime": "2023-03-10T11:13:15Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_006_Delete')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DeleteActivity",
						"description": "Supported dataset type: Azure blob, Amazon S3, Azure Data lake Storage Gen1, Azure Data lake Storage Gen2, File Share associated with FTP, SFTP and File System linked service.",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "FileInTarget",
								"type": "DatasetReference",
								"parameters": {}
							},
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "adls_connection3",
									"type": "LinkedServiceReference"
								},
								"path": "targetcontainer"
							},
							"enableLogging": true,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-03-10T11:29:21Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/FileInTarget')]",
				"[concat(variables('factoryId'), '/linkedServices/adls_connection3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_007_LookupAdlsFiles')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LookupFileData",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "LookupAdlsCustomerFile",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEachData",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LookupFileData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LookupFileData').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "SetVarCustomerData",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "VarCustomerData",
										"value": {
											"value": "@item().Name",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"VarCustomerData": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2023-03-10T15:29:34Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/LookupAdlsCustomerFile')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_008_LookupDbData')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LookupDB",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[sp_employee_test2]",
								"storedProcedureParameters": {
									"state": {
										"type": "String",
										"value": "Arizona"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureDbCustomerData",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEachCustomer",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LookupDB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LookupDB').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "SetVarCustomer",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "VarX",
										"value": {
											"value": "@item().Name",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"VarX": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2023-03-10T16:15:59Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureDbCustomerData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_009_StoredProcedure')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "StoredProcedureExecute",
						"description": "StoredProcedure activity is used to run proc in database not to return any value in pipeline",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_employee_test]"
						},
						"linkedServiceName": {
							"referenceName": "azureDB_connection",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-03-10T17:30:01Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/azureDB_connection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_010_FilterDataLoadDB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LookupFileData",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "SourceSalesData",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "FilterSalesData",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "LookupFileData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LookupFileData').output.value",
								"type": "Expression"
							},
							"condition": {
								"value": "@greaterOrEquals(int(item().Price), 100)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEachSalesData",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "FilterSalesData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('FilterSalesData').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "StoredProcToInsertData",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[sp_SalesFilteredDataInsert]",
										"storedProcedureParameters": {
											"CityId": {
												"value": {
													"value": "@item().CityId",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"cost": {
												"value": {
													"value": "@item().Cost",
													"type": "Expression"
												},
												"type": "Double"
											},
											"CustomerId": {
												"value": {
													"value": "@item().CustomerId",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"DeilveryDate": {
												"value": {
													"value": "@item().DeilveryDate",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"DiscountPercent": {
												"value": {
													"value": "@item().DiscountPercent",
													"type": "Expression"
												},
												"type": "Double"
											},
											"ItemID": {
												"value": {
													"value": "@item().ItemId",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"OrderNo": {
												"value": {
													"value": "@item().OrderNo",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"Price": {
												"value": {
													"value": "@item().Price",
													"type": "Expression"
												},
												"type": "Double"
											},
											"Qty": {
												"value": {
													"value": "@item().Qty",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"SalesDate": {
												"value": {
													"value": "@item().SalesDate",
													"type": "Expression"
												},
												"type": "DateTime"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "azureDB_connection",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"VarX": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2023-03-10T18:39:39Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceSalesData')]",
				"[concat(variables('factoryId'), '/linkedServices/azureDB_connection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_011_IfActivityLoadDataIntoTable')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetMetadataFiles",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "SourceMetadata",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEachFiles",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GetMetadataFiles",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetMetadataFiles').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "IfConditionFileName",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "SetVarFileName",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@startswith(item().name, 'Sales')",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "CopydataAdlsToDB",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"storeSettings": {
															"type": "AzureBlobFSReadSettings",
															"recursive": true,
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings"
														}
													},
													"sink": {
														"type": "AzureSqlSink",
														"writeBehavior": "insert",
														"sqlWriterUseTableLock": false,
														"disableMetricsCollection": false
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "dsSourceTextFile",
														"type": "DatasetReference",
														"parameters": {
															"ParFileName": {
																"value": "@variables('VarFileName')",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "AzureSalesTable",
														"type": "DatasetReference",
														"parameters": {}
													}
												]
											}
										]
									}
								},
								{
									"name": "SetVarFileName",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "VarFileName",
										"value": {
											"value": "@item().name",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"VarFileName": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2023-03-12T08:04:55Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceMetadata')]",
				"[concat(variables('factoryId'), '/datasets/dsSourceTextFile')]",
				"[concat(variables('factoryId'), '/datasets/AzureSalesTable')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_012_ExecutePipelineActivity')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ExecutePipeline1",
						"description": "to call/execute another pipeline",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_001_CopySpecificFilesWithinAdls",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Execute Pipeline1",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ExecutePipeline1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_005_AppendVariable",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-03-12T09:54:13Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_001_CopySpecificFilesWithinAdls')]",
				"[concat(variables('factoryId'), '/pipelines/pl_005_AppendVariable')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_012_SwitchActivity')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetMetadataFiles",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "dsSourcesFiles",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEachMetadata",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GetMetadataFiles",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetMetadataFiles').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "SetVarFileName",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "VarFileName",
										"value": {
											"value": "@item().name",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SwitchBasedOnFile",
									"type": "Switch",
									"dependsOn": [
										{
											"activity": "SetVarFileName",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"on": {
											"value": "@variables('VarFileName')",
											"type": "Expression"
										},
										"cases": [
											{
												"value": "WhenCustomerFile",
												"activities": [
													{
														"name": "SetvarResultFileName1",
														"description": "",
														"type": "SetVariable",
														"dependsOn": [],
														"userProperties": [],
														"typeProperties": {
															"variableName": "VarResultFileName",
															"value": "CustomerFile"
														}
													}
												]
											},
											{
												"value": "WhenSalesFile",
												"activities": [
													{
														"name": "SetvarResultFileName2",
														"type": "SetVariable",
														"dependsOn": [],
														"userProperties": [],
														"typeProperties": {
															"variableName": "VarResultFileName",
															"value": "SalesFile"
														}
													}
												]
											},
											{
												"value": "WhenItemFile",
												"activities": [
													{
														"name": "SetvarResultFileName4",
														"type": "SetVariable",
														"dependsOn": [],
														"userProperties": [],
														"typeProperties": {
															"variableName": "VarResultFileName",
															"value": "ItemaFile"
														}
													}
												]
											},
											{
												"value": "WhenGeograpgyFile",
												"activities": [
													{
														"name": "SetvarResultFileName5",
														"type": "SetVariable",
														"dependsOn": [],
														"userProperties": [],
														"typeProperties": {
															"variableName": "VarResultFileName",
															"value": "GeographyFile"
														}
													}
												]
											}
										],
										"defaultActivities": [
											{
												"name": "SetVaRResultFileName0",
												"type": "SetVariable",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"variableName": "VarResultFileName",
													"value": "DefaultFile"
												}
											}
										]
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"VarFileName": {
						"type": "String"
					},
					"VarResultFileName": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2023-03-12T09:45:39Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/dsSourcesFiles')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_013_ScriptActivity')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ScriptToCreateTable",
						"description": "Works only on DB",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "azureDB_connection",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "Create table dbo.ScriptTable(Id integer, Name varchar(30))"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-03-12T10:04:25Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/azureDB_connection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_014_ConvertFileDataFormat')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyFiledata",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AvroSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "AvroWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DelimitedCustomerFile",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Avro1CustomerFile",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyFiledata_copy1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DelimitedCustomerFile",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ParquetCustomerFile",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-03-12T10:17:17Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DelimitedCustomerFile')]",
				"[concat(variables('factoryId'), '/datasets/Avro1CustomerFile')]",
				"[concat(variables('factoryId'), '/datasets/ParquetCustomerFile')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_015_FailActivity')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetMetadataFolder",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "dsFileToCopy",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "IfCondition",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GetMetadataFolder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('GetMetadataFolder').output.exists",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "FailActivity",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "FileNotExist",
										"errorCode": "100"
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "dsFileToCopy",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "dsCopySink",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-03-12T10:51:12Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/dsFileToCopy')]",
				"[concat(variables('factoryId'), '/datasets/dsCopySink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_016_DF_SelectTransformation')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dfSelectActivity",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflowSeelct",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"SourceSelectTransformation": {},
									"SinkSQL": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-03-23T14:12:59Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflowSeelct')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_017_DF_Transformation')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DataFLowTransformations",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dfTransformation",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"dfSource1": {},
									"dfsource2": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-03-23T18:25:22Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dfTransformation')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_018_IncremantalDataLoad')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "df_IncrementalDataLoad",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_IncrementalDataLoad",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"SrcCustomerTable": {},
									"TgtCustomerDataBlob": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine",
							"continuationSettings": {
								"customizedCheckpointKey": "30bca4ab-bf7e-4dd5-96d6-da009d0c5014"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-03-27T14:21:46Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_IncrementalDataLoad')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_019_CastData')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "df_castTransformatio",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_castTransformatio",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-03-27T15:46:21Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_castTransformatio')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_020_ErrorRowHandling')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "df_ErrorRowsHandleDataFlow",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_ErrorRowsHandleDataFlow",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"srcSalesData": {},
									"sinkSalesBadData": {},
									"sinkSalesGoodData": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-03-28T17:30:35Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_ErrorRowsHandleDataFlow')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_021_SCDType1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "df_ScdType1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_ScdType1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"srcEmpData": {},
									"sinkEmpTable": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-03-30T11:17:14Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_ScdType1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_022_ArrayToStringData')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LookupEmails",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "ds_emails",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEachEmailID",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LookupEmails",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LookupEmails').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "SetTempVarEmail",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "VarTempEmail",
										"value": {
											"value": "@concat(item().EmailId,':',variables('VarEmailId'))",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SetVarEmail",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SetTempVarEmail",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "VarTempEmail",
										"value": {
											"value": "@variables('VarEmailId')",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"VarEmailId": {
						"type": "String"
					},
					"VarTempEmail": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2023-03-30T12:47:08Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_emails')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_022_SCDType2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "df_ScdType2",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_ScdType2",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"sourceEmpData": {},
									"sourceEmpDataTable": {},
									"sinkEmpTable": {},
									"sinkEmpDataTable1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-03-30T15:42:03Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_ScdType2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_023_EmailAlert')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyFileSource",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DelimitedText1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DelimitedText2",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "WebActivityToSendEmails",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "CopyFileSource",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-43.eastus.logic.azure.com:443/workflows/aec76c5e67d84cf1a2f83039e1d97184/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=xiBAPKicRjsUZ7jVaL6BnMh0HUwWZs3WFMPuxAwlcEQ",
							"method": "POST",
							"headers": {
								"Content-Type": "applictaion/json"
							},
							"body": {
								"value": "{\n  \"Pipeline\" : \"@{pipeline().Pipeline}\",\n  \"ErrorMessage\" : \"@{activity('CopyFileSource').Error.Message}\",\n  \"DataFactoryName\" : \"@{pipeline().DataFactory}\",\n  \"RunId\" : \"@{pipeline().RunId}\"\n}",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-04-03T10:45:46Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DelimitedText1')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedText2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_024_SplitRowIntoMultipleRows')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "df_splitRowIntoMultipleRows",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_splitRowIntoMultipleRows",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"sourceMultipleValuesColumnfile": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-04-01T08:10:27Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_splitRowIntoMultipleRows')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_025_API_FileLoad')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyDataFromAPI",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "BinaryReadSettings",
									"compressionProperties": {
										"type": "ZipDeflateReadSettings",
										"preserveZipFileNameAsFolder": true
									}
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "dsZipBinaryFromAPICall",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dsSinkUnzippedFiles",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-04-01T08:58:07Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/dsZipBinaryFromAPICall')]",
				"[concat(variables('factoryId'), '/datasets/dsSinkUnzippedFiles')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_026_API_CallStoreData')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Web1",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://reqres.in/api/users?page=1",
							"method": "GET",
							"headers": {}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Web1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@range(1,activity('Web1').output.total_pages)",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['data'][0]['id']"
													},
													"sink": {
														"type": "Int64",
														"ordinal": 1
													}
												},
												{
													"source": {
														"path": "$['data'][0]['email']"
													},
													"sink": {
														"type": "String",
														"ordinal": 2
													}
												},
												{
													"source": {
														"path": "$['data'][0]['first_name']"
													},
													"sink": {
														"type": "String",
														"ordinal": 3
													}
												},
												{
													"source": {
														"path": "$['data'][0]['last_name']"
													},
													"sink": {
														"type": "String",
														"ordinal": 4
													}
												},
												{
													"source": {
														"path": "$['data'][0]['avatar']"
													},
													"sink": {
														"type": "String",
														"ordinal": 5
													}
												}
											],
											"collectionReference": "$['data']",
											"mapComplexValuesToString": true
										}
									},
									"inputs": [
										{
											"referenceName": "dsRestAPI",
											"type": "DatasetReference",
											"parameters": {
												"QueryParameters": {
													"value": "?page=@{item()}",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DelimitedText5",
											"type": "DatasetReference",
											"parameters": {
												"FileName": {
													"value": "APIPage@{item()}.csv",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-04-01T11:32:55Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/dsRestAPI')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedText5')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_027_CompareSourceAndTargetData')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "df_compareSourceTarget",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_compareSourceTarget",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"sourceFileData": {},
									"targetTableData": {},
									"sinkNotMatchingRecords": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-04-01T17:29:08Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_compareSourceTarget')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_028_Parameterized')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyDataTablToTable",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Surrkey",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Surrkey",
											"type": "Int32",
											"physicalType": "Int32"
										}
									},
									{
										"source": {
											"name": "EmpId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "EmpId",
											"type": "Int32",
											"physicalType": "Int32"
										}
									},
									{
										"source": {
											"name": "Ename",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Ename",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Salary",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Salary",
											"type": "Int32",
											"physicalType": "Int32"
										}
									},
									{
										"source": {
											"name": "IsActive",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "IsActive",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_SqlDbTablesParameterized",
								"type": "DatasetReference",
								"parameters": {
									"ParTableName": "EmpData"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_SqlDbTablesParameterized",
								"type": "DatasetReference",
								"parameters": {
									"ParTableName": "EmpDataCopy"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-04-02T12:01:55Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_SqlDbTablesParameterized')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_029_WebActivityDemo')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "WebActivityREST",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://dummy.restapiexample.com/api/v1/employees",
							"method": "GET",
							"headers": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-04-03T10:34:08Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_030_ValidationActivity')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Validation1",
						"type": "Validation",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DelimitedText1",
								"type": "DatasetReference",
								"parameters": {}
							},
							"timeout": "0.12:00:00",
							"sleep": 10
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-04-03T10:45:47Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DelimitedText1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Avro1CustomerFile')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adls_connection3",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Avro",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "targetcontainer"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adls_connection3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDbCustomerData')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "azureDB_connection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Customer Id",
						"type": "nvarchar"
					},
					{
						"name": "Age",
						"type": "nvarchar"
					},
					{
						"name": "City",
						"type": "nvarchar"
					},
					{
						"name": "State",
						"type": "nvarchar"
					},
					{
						"name": "Name",
						"type": "nvarchar"
					},
					{
						"name": "FileName",
						"type": "nvarchar"
					},
					{
						"name": "InsertTimeStamp",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Customers"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/azureDB_connection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSalesTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "azureDB_connection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "OrderNo",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ItemID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SalesDate",
						"type": "date"
					},
					{
						"name": "DeilveryDate",
						"type": "date"
					},
					{
						"name": "CustomerId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CityId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Qty",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Price",
						"type": "float",
						"precision": 15
					},
					{
						"name": "cost",
						"type": "float",
						"precision": 15
					},
					{
						"name": "DiscountPercent",
						"type": "float",
						"precision": 15
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "sales"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/azureDB_connection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "azureDB_connection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Customer Id",
						"type": "nvarchar"
					},
					{
						"name": "Age",
						"type": "nvarchar"
					},
					{
						"name": "City",
						"type": "nvarchar"
					},
					{
						"name": "State",
						"type": "nvarchar"
					},
					{
						"name": "Name",
						"type": "nvarchar"
					},
					{
						"name": "FileName",
						"type": "nvarchar"
					},
					{
						"name": "InsertTimeStamp",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Customers"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/azureDB_connection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable1Transform')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "azureDB_connection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "TranformData"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/azureDB_connection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "azureDB_connection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "EmpID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "EmpName",
						"type": "varchar"
					},
					{
						"name": "EmpSalary",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "EmpData"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/azureDB_connection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "azureDB_connection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Surrkey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "EmpId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Ename",
						"type": "varchar"
					},
					{
						"name": "Salary",
						"type": "int",
						"precision": 10
					},
					{
						"name": "IsActive",
						"type": "char"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "EmpData"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/azureDB_connection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable4')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "azureDB_connection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "SN",
						"type": "int",
						"precision": 10
					},
					{
						"name": "FirstName",
						"type": "varchar"
					},
					{
						"name": "LastName",
						"type": "varchar"
					},
					{
						"name": "Gender",
						"type": "char"
					},
					{
						"name": "Country",
						"type": "varchar"
					},
					{
						"name": "Age",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Date",
						"type": "date"
					},
					{
						"name": "Id",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "PersonDetails"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/azureDB_connection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable5')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "azureDB_connection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "SN",
						"type": "int",
						"precision": 10
					},
					{
						"name": "FirstName",
						"type": "varchar"
					},
					{
						"name": "LastName",
						"type": "varchar"
					},
					{
						"name": "Gender",
						"type": "char"
					},
					{
						"name": "Country",
						"type": "varchar"
					},
					{
						"name": "Age",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Date",
						"type": "varchar"
					},
					{
						"name": "Id",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "PersonDetails"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/azureDB_connection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedCustomerFile')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adls_connection3",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "CustomerData.txt",
						"folderPath": "SourceRawFiles",
						"fileSystem": "sourcecontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adls_connection3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adls_connection3",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "MetaDataFile.txt",
						"fileSystem": "sourcecontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "City Id\tCity\t\"State\t\t\"",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adls_connection3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LinkedServiceAzureBlob",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "targetcontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "CustomerId",
						"type": "String"
					},
					{
						"name": "Age",
						"type": "String"
					},
					{
						"name": "City",
						"type": "String"
					},
					{
						"name": "State",
						"type": "String"
					},
					{
						"name": "Name",
						"type": "String"
					},
					{
						"name": "FileName",
						"type": "String"
					},
					{
						"name": "InsertTimeStamp",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LinkedServiceAzureBlob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adls_connection3",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "MultiValueColumnsData.csv",
						"fileSystem": "sourcecontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "EmpId",
						"type": "String"
					},
					{
						"name": "EmpName",
						"type": "String"
					},
					{
						"name": "Skills",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adls_connection3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText4')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adls_connection3",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "targetcontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Name",
						"type": "String"
					},
					{
						"name": "Category",
						"type": "String"
					},
					{
						"name": "Status",
						"type": "String"
					},
					{
						"name": "Error",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adls_connection3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText5')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adls_connection3",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": "APIData",
						"fileSystem": "targetcontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adls_connection3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText6')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LinkedServiceAzureBlob",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "PersonDetailsData.csv",
						"container": "sourcecontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "SN",
						"type": "String"
					},
					{
						"name": "First Name",
						"type": "String"
					},
					{
						"name": "Last Name",
						"type": "String"
					},
					{
						"name": "Gender",
						"type": "String"
					},
					{
						"name": "Country",
						"type": "String"
					},
					{
						"name": "Age",
						"type": "String"
					},
					{
						"name": "Date",
						"type": "String"
					},
					{
						"name": "Id",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LinkedServiceAzureBlob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText7')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LinkedServiceAzureBlob",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "PersonDetailsData.csv",
						"container": "sourcecontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "SN",
						"type": "String"
					},
					{
						"name": "First Name",
						"type": "String"
					},
					{
						"name": "Last Name",
						"type": "String"
					},
					{
						"name": "Gender",
						"type": "String"
					},
					{
						"name": "Country",
						"type": "String"
					},
					{
						"name": "Age",
						"type": "String"
					},
					{
						"name": "Date",
						"type": "String"
					},
					{
						"name": "Id",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LinkedServiceAzureBlob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText8')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LinkedServiceAzureBlob",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "targetcontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "CustomerId",
						"type": "String"
					},
					{
						"name": "Age",
						"type": "String"
					},
					{
						"name": "City",
						"type": "String"
					},
					{
						"name": "State",
						"type": "String"
					},
					{
						"name": "Name",
						"type": "String"
					},
					{
						"name": "FileName",
						"type": "String"
					},
					{
						"name": "InsertTimeStamp",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LinkedServiceAzureBlob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FileInTarget')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adls_connection3",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "CustomerData.txt",
						"fileSystem": "targetcontainer"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adls_connection3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LookupAdlsCustomerFile')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adls_connection3",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "CustomerData.txt",
						"folderPath": "SourceRawFiles",
						"fileSystem": "sourcecontainer"
					},
					"columnDelimiter": "\t",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Customer Id\tAge\tCity\tState\tName",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adls_connection3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ParquetCustomerFile')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adls_connection3",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "targetcontainer"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adls_connection3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SinkAzureSql')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "azureDB_connection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "Geography"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/azureDB_connection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceMetadata')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adls_connection3",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "SourceRawFiles",
						"fileSystem": "sourcecontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adls_connection3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceSalesData')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adls_connection3",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "SalesData.txt",
						"folderPath": "SourceRawFiles",
						"fileSystem": "sourcecontainer"
					},
					"columnDelimiter": "\t",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Order No\tItem ID\tSales Date\tDeilvery Date\tCustomer Id\tCity Id\tQty\tPrice\tcost\tDiscount Percent",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adls_connection3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceTextFileCustomer')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adls_connection3",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "CustomerData.txt",
						"folderPath": "SourceRawFiles",
						"fileSystem": "sourcecontainer"
					},
					"columnDelimiter": "\t",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"nullValue": "-1",
					"quoteChar": ""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adls_connection3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceTextFiles')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adls_connection3",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "SourceRawFiles",
						"fileSystem": "sourcecontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adls_connection3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TargetAzureDBCustomer')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "azureDB_connection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "Customers"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/azureDB_connection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TargetTextFiles')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adls_connection3",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "targetcontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adls_connection3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_empdataScd1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LinkedServiceAzureBlob",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "CustomerData.csv",
						"container": "sourcecontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "EmpId",
						"type": "String"
					},
					{
						"name": "EmpName",
						"type": "String"
					},
					{
						"name": "EmpSalary",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LinkedServiceAzureBlob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dsAzureSalesBadDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "azureDB_connection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ORDERNUMBER",
						"type": "int",
						"precision": 10
					},
					{
						"name": "QUANTITY_ORDERED",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PRICEEACH",
						"type": "float",
						"precision": 15
					},
					{
						"name": "ORDERLINENUMBER",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SALES",
						"type": "float",
						"precision": 15
					},
					{
						"name": "ORDERDATE",
						"type": "varchar"
					},
					{
						"name": "STATUS",
						"type": "varchar"
					},
					{
						"name": "QTR_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "MONTH_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "YEAR_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PRODUCTLINE",
						"type": "varchar"
					},
					{
						"name": "MSRP",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PRODUCTCODE",
						"type": "varchar"
					},
					{
						"name": "CUSTOMERNAME",
						"type": "varchar"
					},
					{
						"name": "PHONE",
						"type": "varchar"
					},
					{
						"name": "ADDRESSLINE1",
						"type": "varchar"
					},
					{
						"name": "ADDRESSLINE2",
						"type": "varchar"
					},
					{
						"name": "CITY",
						"type": "varchar"
					},
					{
						"name": "STATE",
						"type": "varchar"
					},
					{
						"name": "POSTALCODE",
						"type": "int",
						"precision": 10
					},
					{
						"name": "COUNTRY",
						"type": "varchar"
					},
					{
						"name": "TERRITORY",
						"type": "varchar"
					},
					{
						"name": "CONTACTLASTNAME",
						"type": "varchar"
					},
					{
						"name": "CONTACTFIRSTNAME",
						"type": "varchar"
					},
					{
						"name": "DEALSIZE",
						"type": "varchar"
					},
					{
						"name": "FileName",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "SALES_DATA_BAD"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/azureDB_connection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dsAzureSalesDataTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "azureDB_connection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ORDERNUMBER",
						"type": "int",
						"precision": 10
					},
					{
						"name": "QUANTITY_ORDERED",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PRICEEACH",
						"type": "float",
						"precision": 15
					},
					{
						"name": "ORDERLINENUMBER",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SALES",
						"type": "float",
						"precision": 15
					},
					{
						"name": "ORDERDATE",
						"type": "date"
					},
					{
						"name": "STATUS",
						"type": "varchar"
					},
					{
						"name": "QTR_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "MONTH_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "YEAR_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PRODUCTLINE",
						"type": "varchar"
					},
					{
						"name": "MSRP",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PRODUCTCODE",
						"type": "varchar"
					},
					{
						"name": "CUSTOMERNAME",
						"type": "varchar"
					},
					{
						"name": "PHONE",
						"type": "varchar"
					},
					{
						"name": "ADDRESSLINE1",
						"type": "varchar"
					},
					{
						"name": "ADDRESSLINE2",
						"type": "varchar"
					},
					{
						"name": "CITY",
						"type": "varchar"
					},
					{
						"name": "STATE",
						"type": "varchar"
					},
					{
						"name": "POSTALCODE",
						"type": "int",
						"precision": 10
					},
					{
						"name": "COUNTRY",
						"type": "varchar"
					},
					{
						"name": "TERRITORY",
						"type": "varchar"
					},
					{
						"name": "CONTACTLASTNAME",
						"type": "varchar"
					},
					{
						"name": "CONTACTFIRSTNAME",
						"type": "varchar"
					},
					{
						"name": "DEALSIZE",
						"type": "varchar"
					},
					{
						"name": "FileName",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "SALES_DATA"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/azureDB_connection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dsAzureSalesGoodData')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "azureDB_connection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ORDERNUMBER",
						"type": "int",
						"precision": 10
					},
					{
						"name": "QUANTITY_ORDERED",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PRICEEACH",
						"type": "float",
						"precision": 15
					},
					{
						"name": "ORDERLINENUMBER",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SALES",
						"type": "float",
						"precision": 15
					},
					{
						"name": "ORDERDATE",
						"type": "date"
					},
					{
						"name": "STATUS",
						"type": "varchar"
					},
					{
						"name": "QTR_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "MONTH_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "YEAR_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PRODUCTLINE",
						"type": "varchar"
					},
					{
						"name": "MSRP",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PRODUCTCODE",
						"type": "varchar"
					},
					{
						"name": "CUSTOMERNAME",
						"type": "varchar"
					},
					{
						"name": "PHONE",
						"type": "varchar"
					},
					{
						"name": "ADDRESSLINE1",
						"type": "varchar"
					},
					{
						"name": "ADDRESSLINE2",
						"type": "varchar"
					},
					{
						"name": "CITY",
						"type": "varchar"
					},
					{
						"name": "STATE",
						"type": "varchar"
					},
					{
						"name": "POSTALCODE",
						"type": "int",
						"precision": 10
					},
					{
						"name": "COUNTRY",
						"type": "varchar"
					},
					{
						"name": "TERRITORY",
						"type": "varchar"
					},
					{
						"name": "CONTACTLASTNAME",
						"type": "varchar"
					},
					{
						"name": "CONTACTFIRSTNAME",
						"type": "varchar"
					},
					{
						"name": "DEALSIZE",
						"type": "varchar"
					},
					{
						"name": "FileName",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "SALES_DATA"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/azureDB_connection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dsCopySink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adls_connection3",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "targetcontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adls_connection3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dsDelimitedTransfomation2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adls_connection3",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "SalesData.txt",
						"folderPath": "SourceRawFiles",
						"fileSystem": "sourcecontainer"
					},
					"columnDelimiter": "\t",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "OrderNo",
						"type": "String"
					},
					{
						"name": "ItemID",
						"type": "String"
					},
					{
						"name": "SalesDate",
						"type": "String"
					},
					{
						"name": "DeilveryDate",
						"type": "String"
					},
					{
						"name": "CustomerId",
						"type": "String"
					},
					{
						"name": "CityId",
						"type": "String"
					},
					{
						"name": "Qty",
						"type": "String"
					},
					{
						"name": "Price",
						"type": "String"
					},
					{
						"name": "cost",
						"type": "String"
					},
					{
						"name": "DiscountPercent",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adls_connection3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dsEmpData')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LinkedServiceAzureBlob",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "CustomerData.csv",
						"container": "sourcecontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "EmpId",
						"type": "String"
					},
					{
						"name": "EmpName",
						"type": "String"
					},
					{
						"name": "EmpSalary",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LinkedServiceAzureBlob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dsEmpTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "azureDB_connection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Surrkey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "EmpId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Ename",
						"type": "varchar"
					},
					{
						"name": "Salary",
						"type": "int",
						"precision": 10
					},
					{
						"name": "IsActive",
						"type": "char"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "EmpData"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/azureDB_connection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dsFileToCopy')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adls_connection3",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "MetaDataFile1.txt",
						"fileSystem": "sourcecontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adls_connection3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dsLoadAzureTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "azureDB_connection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "CustomerData"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/azureDB_connection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dsRestAPI')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RestService1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"QueryParameters": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": {
						"value": "@dataset().QueryParameters",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RestService1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dsSalesDataCSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LinkedServiceAzureBlob",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "sales_data_sample.csv",
						"container": "sourcecontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ORDERNUMBER",
						"type": "String"
					},
					{
						"name": "QUANTITYORDERED",
						"type": "String"
					},
					{
						"name": "PRICEEACH",
						"type": "String"
					},
					{
						"name": "ORDERLINENUMBER",
						"type": "String"
					},
					{
						"name": "SALES",
						"type": "String"
					},
					{
						"name": "ORDERDATE",
						"type": "String"
					},
					{
						"name": "STATUS",
						"type": "String"
					},
					{
						"name": "QTR_ID",
						"type": "String"
					},
					{
						"name": "MONTH_ID",
						"type": "String"
					},
					{
						"name": "YEAR_ID",
						"type": "String"
					},
					{
						"name": "PRODUCTLINE",
						"type": "String"
					},
					{
						"name": "MSRP",
						"type": "String"
					},
					{
						"name": "PRODUCTCODE",
						"type": "String"
					},
					{
						"name": "CUSTOMERNAME",
						"type": "String"
					},
					{
						"name": "PHONE",
						"type": "String"
					},
					{
						"name": "ADDRESSLINE1",
						"type": "String"
					},
					{
						"name": "ADDRESSLINE2",
						"type": "String"
					},
					{
						"name": "CITY",
						"type": "String"
					},
					{
						"name": "STATE",
						"type": "String"
					},
					{
						"name": "POSTALCODE",
						"type": "String"
					},
					{
						"name": "COUNTRY",
						"type": "String"
					},
					{
						"name": "TERRITORY",
						"type": "String"
					},
					{
						"name": "CONTACTLASTNAME",
						"type": "String"
					},
					{
						"name": "CONTACTFIRSTNAME",
						"type": "String"
					},
					{
						"name": "DEALSIZE",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LinkedServiceAzureBlob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dsSinkUnzippedFiles')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adls_connection3",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "ZipFilesFolder",
						"fileSystem": "sourcecontainer"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adls_connection3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dsSourceTextFile')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adls_connection3",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"ParFileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().ParFileName",
							"type": "Expression"
						},
						"folderPath": "SourceRawFiles",
						"fileSystem": "sourcecontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adls_connection3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dsSourcesFiles')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adls_connection3",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "SourceRawFiles",
						"fileSystem": "sourcecontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adls_connection3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dsTargetCustomerDataBlob')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LinkedServiceAzureBlob",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "targetcontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LinkedServiceAzureBlob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dsTextSelect')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adls_connection3",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "GeographyData.txt",
						"folderPath": "SourceRawFiles",
						"fileSystem": "sourcecontainer"
					},
					"columnDelimiter": "\t",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "City Id",
						"type": "String"
					},
					{
						"name": "City",
						"type": "String"
					},
					{
						"name": "State\t\t",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adls_connection3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dsTextTransformation')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adls_connection3",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "CustomerData.txt",
						"folderPath": "SourceRawFiles",
						"fileSystem": "sourcecontainer"
					},
					"columnDelimiter": "\t",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Customer Id",
						"type": "String"
					},
					{
						"name": "Age",
						"type": "String"
					},
					{
						"name": "City",
						"type": "String"
					},
					{
						"name": "State",
						"type": "String"
					},
					{
						"name": "Name",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adls_connection3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dsZipBinaryFromAPICall')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "HttpServer1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation"
					},
					"compression": {
						"type": "ZipDeflate",
						"level": "Fastest"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/HttpServer1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_AzureCustomerTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "azureDB_connection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Customer Id",
						"type": "nvarchar"
					},
					{
						"name": "Age",
						"type": "nvarchar"
					},
					{
						"name": "City",
						"type": "nvarchar"
					},
					{
						"name": "State",
						"type": "nvarchar"
					},
					{
						"name": "Name",
						"type": "nvarchar"
					},
					{
						"name": "FileName",
						"type": "nvarchar"
					},
					{
						"name": "InsertTimeStamp",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "CustomerData"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/azureDB_connection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_SqlDbTablesParameterized')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "linkedServiceSQLDatabaseParameterised",
					"type": "LinkedServiceReference",
					"parameters": {
						"PardbNAme": "azurecloudsqldb"
					}
				},
				"parameters": {
					"ParTableName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": {
						"value": "@dataset().ParTableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/linkedServiceSQLDatabaseParameterised')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_emails')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LinkedServiceAzureBlob",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "ArrayData.txt",
						"container": "sourcecontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LinkedServiceAzureBlob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HttpServer1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('HttpServer1_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LinkedServiceAzureBlob')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('LinkedServiceAzureBlob_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LinkedServiceDataLakeGen2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('LinkedServiceDataLakeGen2_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('LinkedServiceDataLakeGen2_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LinkedServicesBlobStorage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('LinkedServicesBlobStorage_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestService1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('RestService1_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/adls_connection3')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('adls_connection3_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('adls_connection3_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/azureDB_connection')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('azureDB_connection_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/linkedServiceSQLDatabaseParameterised')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"PardbNAme": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('linkedServiceSQLDatabaseParameterised_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflowSeelct')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "dsTextSelect",
								"type": "DatasetReference"
							},
							"name": "SourceSelectTransformation"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SinkAzureSql",
								"type": "DatasetReference"
							},
							"name": "SinkSQL"
						}
					],
					"transformations": [
						{
							"name": "selectTransformation"
						}
					],
					"scriptLines": [
						"source(output(",
						"          {City Id} as integer,",
						"          City as string,",
						"          {State          } as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     inferDriftedColumnTypes: true,",
						"     limit: 100,",
						"     ignoreNoFilesFound: false) ~> SourceSelectTransformation",
						"SourceSelectTransformation select(mapColumn(",
						"          CityId = {City Id},",
						"          City",
						"     ),",
						"     skipDuplicateMapInputs: false,",
						"     skipDuplicateMapOutputs: false) ~> selectTransformation",
						"selectTransformation sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          CityId,",
						"          City",
						"     )) ~> SinkSQL"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/dsTextSelect')]",
				"[concat(variables('factoryId'), '/datasets/SinkAzureSql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dfTransformation')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "dsTextTransformation",
								"type": "DatasetReference"
							},
							"name": "dfSource1"
						},
						{
							"dataset": {
								"referenceName": "dsDelimitedTransfomation2",
								"type": "DatasetReference"
							},
							"name": "dfsource2"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureSqlTable1Transform",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "cast1"
						},
						{
							"name": "select1"
						},
						{
							"name": "derivedColumn1"
						},
						{
							"name": "surrogateKey1"
						},
						{
							"name": "cast2"
						},
						{
							"name": "filter1"
						},
						{
							"name": "sort1"
						},
						{
							"name": "join1"
						},
						{
							"name": "select2"
						},
						{
							"name": "rank1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          {Customer Id} as string,",
						"          Age as string,",
						"          City as string,",
						"          State as string,",
						"          Name as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> dfSource1",
						"source(output(",
						"          OrderNo as string,",
						"          ItemID as string,",
						"          SalesDate as string,",
						"          DeilveryDate as string,",
						"          CustomerId as string,",
						"          CityId as string,",
						"          Qty as string,",
						"          Price as string,",
						"          cost as string,",
						"          DiscountPercent as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> dfsource2",
						"dfSource1 cast(output(",
						"          {Customer Id} as integer,",
						"          Age as integer,",
						"          City as string,",
						"          State as string,",
						"          Name as string",
						"     ),",
						"     errors: true) ~> cast1",
						"cast1 select(mapColumn(",
						"          CustomerId = {Customer Id},",
						"          Age,",
						"          City,",
						"          State,",
						"          CustomerName = Name",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 derive(CustomerName = replace(CustomerName,' ','')) ~> derivedColumn1",
						"derivedColumn1 keyGenerate(output(SurgKey as long),",
						"     startAt: 1L,",
						"     stepValue: 1L) ~> surrogateKey1",
						"dfsource2 cast(output(",
						"          OrderNo as integer,",
						"          ItemID as integer,",
						"          SalesDate as date 'dd-MM-yyyy',",
						"          DeilveryDate as date 'dd-MM-yyyy',",
						"          CustomerId as integer,",
						"          CityId as integer,",
						"          Qty as integer,",
						"          Price as float,",
						"          cost as float,",
						"          DiscountPercent as float",
						"     ),",
						"     errors: true) ~> cast2",
						"cast2 filter(CustomerId < 100) ~> filter1",
						"filter1 sort(asc(CustomerId, true),",
						"     caseInsensitive: true) ~> sort1",
						"surrogateKey1, sort1 join(select1@CustomerId == cast2@CustomerId,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join1",
						"join1 select(mapColumn(",
						"          CustomerId = select1@CustomerId,",
						"          Age,",
						"          City,",
						"          State,",
						"          CustomerName,",
						"          SurgKey,",
						"          OrderNo,",
						"          ItemID,",
						"          SalesDate,",
						"          DeilveryDate,",
						"          CustomerId = cast2@CustomerId,",
						"          CityId,",
						"          Qty,",
						"          Price,",
						"          cost,",
						"          DiscountPercent",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select2",
						"select2 rank(asc(cost, true),",
						"     output(RNK as long)) ~> rank1",
						"rank1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     saveOrder: 1,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/dsTextTransformation')]",
				"[concat(variables('factoryId'), '/datasets/dsDelimitedTransfomation2')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable1Transform')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_ErrorRowsHandleDataFlow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "dsSalesDataCSV",
								"type": "DatasetReference"
							},
							"name": "srcSalesData"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "dsAzureSalesBadDataSet",
								"type": "DatasetReference"
							},
							"name": "sinkSalesBadData"
						},
						{
							"dataset": {
								"referenceName": "dsAzureSalesGoodData",
								"type": "DatasetReference"
							},
							"name": "sinkSalesGoodData"
						}
					],
					"transformations": [
						{
							"name": "ConditionalSpilt"
						},
						{
							"name": "derivedColumnFileName"
						},
						{
							"name": "derivedColu"
						}
					],
					"scriptLines": [
						"source(output(",
						"          ORDERNUMBER as string,",
						"          QUANTITYORDERED as string,",
						"          PRICEEACH as string,",
						"          ORDERLINENUMBER as string,",
						"          SALES as string,",
						"          ORDERDATE as string,",
						"          STATUS as string,",
						"          QTR_ID as string,",
						"          MONTH_ID as string,",
						"          YEAR_ID as string,",
						"          PRODUCTLINE as string,",
						"          MSRP as string,",
						"          PRODUCTCODE as string,",
						"          CUSTOMERNAME as string,",
						"          PHONE as string,",
						"          ADDRESSLINE1 as string,",
						"          ADDRESSLINE2 as string,",
						"          CITY as string,",
						"          STATE as string,",
						"          POSTALCODE as string,",
						"          COUNTRY as string,",
						"          TERRITORY as string,",
						"          CONTACTLASTNAME as string,",
						"          CONTACTFIRSTNAME as string,",
						"          DEALSIZE as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> srcSalesData",
						"srcSalesData split(isNull(toDate(ORDERDATE,'mm/dd/yyyy')),",
						"     disjoint: false) ~> ConditionalSpilt@(ErrorRows, GoodRows)",
						"ConditionalSpilt@ErrorRows derive(fileName = \"sales_data_sample.csv\",",
						"          ORDERDATE = toString(ORDERDATE)) ~> derivedColumnFileName",
						"ConditionalSpilt@GoodRows derive(fileName = \"sale_data_sample.csv\",",
						"          ORDERDATE = toDate(ORDERDATE, 'mm/dd/yyyy', 'IN')) ~> derivedColu",
						"derivedColumnFileName sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ORDERNUMBER as integer,",
						"          QUANTITY_ORDERED as integer,",
						"          PRICEEACH as double,",
						"          ORDERLINENUMBER as integer,",
						"          SALES as double,",
						"          ORDERDATE as string,",
						"          STATUS as string,",
						"          QTR_ID as integer,",
						"          MONTH_ID as integer,",
						"          YEAR_ID as integer,",
						"          PRODUCTLINE as string,",
						"          MSRP as integer,",
						"          PRODUCTCODE as string,",
						"          CUSTOMERNAME as string,",
						"          PHONE as string,",
						"          ADDRESSLINE1 as string,",
						"          ADDRESSLINE2 as string,",
						"          CITY as string,",
						"          STATE as string,",
						"          POSTALCODE as integer,",
						"          COUNTRY as string,",
						"          TERRITORY as string,",
						"          CONTACTLASTNAME as string,",
						"          CONTACTFIRSTNAME as string,",
						"          DEALSIZE as string,",
						"          FileName as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          ORDERNUMBER,",
						"          QUANTITY_ORDERED = QUANTITYORDERED,",
						"          PRICEEACH,",
						"          ORDERLINENUMBER,",
						"          SALES,",
						"          ORDERDATE,",
						"          STATUS,",
						"          QTR_ID,",
						"          MONTH_ID,",
						"          YEAR_ID,",
						"          PRODUCTLINE,",
						"          MSRP,",
						"          PRODUCTCODE,",
						"          CUSTOMERNAME,",
						"          PHONE,",
						"          ADDRESSLINE1,",
						"          ADDRESSLINE2,",
						"          CITY,",
						"          STATE,",
						"          POSTALCODE,",
						"          COUNTRY,",
						"          TERRITORY,",
						"          CONTACTLASTNAME,",
						"          CONTACTFIRSTNAME,",
						"          DEALSIZE,",
						"          FileName = fileName",
						"     )) ~> sinkSalesBadData",
						"derivedColu sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ORDERNUMBER as integer,",
						"          QUANTITY_ORDERED as integer,",
						"          PRICEEACH as double,",
						"          ORDERLINENUMBER as integer,",
						"          SALES as double,",
						"          ORDERDATE as date,",
						"          STATUS as string,",
						"          QTR_ID as integer,",
						"          MONTH_ID as integer,",
						"          YEAR_ID as integer,",
						"          PRODUCTLINE as string,",
						"          MSRP as integer,",
						"          PRODUCTCODE as string,",
						"          CUSTOMERNAME as string,",
						"          PHONE as string,",
						"          ADDRESSLINE1 as string,",
						"          ADDRESSLINE2 as string,",
						"          CITY as string,",
						"          STATE as string,",
						"          POSTALCODE as integer,",
						"          COUNTRY as string,",
						"          TERRITORY as string,",
						"          CONTACTLASTNAME as string,",
						"          CONTACTFIRSTNAME as string,",
						"          DEALSIZE as string,",
						"          FileName as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          ORDERNUMBER,",
						"          QUANTITY_ORDERED = QUANTITYORDERED,",
						"          PRICEEACH,",
						"          ORDERLINENUMBER,",
						"          SALES,",
						"          ORDERDATE,",
						"          STATUS,",
						"          QTR_ID,",
						"          MONTH_ID,",
						"          YEAR_ID,",
						"          PRODUCTLINE,",
						"          MSRP,",
						"          PRODUCTCODE,",
						"          CUSTOMERNAME,",
						"          PHONE,",
						"          ADDRESSLINE1,",
						"          ADDRESSLINE2,",
						"          CITY,",
						"          STATE,",
						"          POSTALCODE,",
						"          COUNTRY,",
						"          TERRITORY,",
						"          CONTACTLASTNAME,",
						"          CONTACTFIRSTNAME,",
						"          DEALSIZE,",
						"          FileName = fileName",
						"     )) ~> sinkSalesGoodData"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/dsSalesDataCSV')]",
				"[concat(variables('factoryId'), '/datasets/dsAzureSalesBadDataSet')]",
				"[concat(variables('factoryId'), '/datasets/dsAzureSalesGoodData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_IncrementalDataLoad')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_AzureCustomerTable",
								"type": "DatasetReference"
							},
							"name": "SrcCustomerTable"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "dsTargetCustomerDataBlob",
								"type": "DatasetReference"
							},
							"name": "TgtCustomerDataBlob"
						}
					],
					"transformations": [
						{
							"name": "castSourceData"
						}
					],
					"scriptLines": [
						"source(output(",
						"          {Customer Id} as integer,",
						"          Age as integer,",
						"          City as string,",
						"          State as string,",
						"          Name as string,",
						"          FileName as string,",
						"          InsertTimeStamp as date",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     enableCdc: true,",
						"     mode: 'read',",
						"     skipInitialLoad: true,",
						"     waterMarkColumn: 'InsertTimeStamp',",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table',",
						"     partitionBy('hash', 1)) ~> SrcCustomerTable",
						"SrcCustomerTable cast(output(",
						"          {Customer Id} as integer,",
						"          Age as integer,",
						"          City as string,",
						"          State as string,",
						"          Name as string,",
						"          FileName as string,",
						"          InsertTimeStamp as date 'dd-MM-yyyy'",
						"     ),",
						"     errors: true) ~> castSourceData",
						"castSourceData sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     mapColumn(",
						"          CustomerId = {Customer Id},",
						"          Age,",
						"          City,",
						"          State,",
						"          Name,",
						"          FileName,",
						"          InsertTimeStamp",
						"     )) ~> TgtCustomerDataBlob"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_AzureCustomerTable')]",
				"[concat(variables('factoryId'), '/datasets/dsTargetCustomerDataBlob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_ScdType1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "df_empdataScd1",
								"type": "DatasetReference"
							},
							"name": "srcEmpData"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureSqlTable2",
								"type": "DatasetReference"
							},
							"name": "sinkEmpTable"
						}
					],
					"transformations": [
						{
							"name": "alterRowTransformation"
						}
					],
					"scriptLines": [
						"source(output(",
						"          EmpId as integer,",
						"          EmpName as string,",
						"          EmpSalary as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> srcEmpData",
						"srcEmpData alterRow(upsertIf(1==1)) ~> alterRowTransformation",
						"alterRowTransformation sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          EmpID as integer,",
						"          EmpName as string,",
						"          EmpSalary as integer",
						"     ),",
						"     deletable:false,",
						"     insertable:false,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['EmpID'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          EmpID = EmpId,",
						"          EmpName,",
						"          EmpSalary",
						"     )) ~> sinkEmpTable"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/df_empdataScd1')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_ScdType2')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "dsEmpData",
								"type": "DatasetReference"
							},
							"name": "sourceEmpData"
						},
						{
							"dataset": {
								"referenceName": "dsEmpTable",
								"type": "DatasetReference"
							},
							"name": "sourceEmpDataTable"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureSqlTable3",
								"type": "DatasetReference"
							},
							"name": "sinkEmpTable"
						},
						{
							"dataset": {
								"referenceName": "AzureSqlTable3",
								"type": "DatasetReference"
							},
							"name": "sinkEmpDataTable1"
						}
					],
					"transformations": [
						{
							"name": "derivedColumnIsActive"
						},
						{
							"name": "selectTableColums"
						},
						{
							"name": "lookupSourceFileData"
						},
						{
							"name": "filterExistingRow"
						},
						{
							"name": "selectTableColumns"
						},
						{
							"name": "derivedIsActiveColumn"
						},
						{
							"name": "alterRowUpdateRow"
						}
					],
					"scriptLines": [
						"source(output(",
						"          EmpId as integer,",
						"          EmpName as string,",
						"          EmpSalary as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> sourceEmpData",
						"source(output(",
						"          Surrkey as integer,",
						"          EmpId as integer,",
						"          Ename as string,",
						"          Salary as integer,",
						"          IsActive as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> sourceEmpDataTable",
						"sourceEmpData derive(IsActive = 'Y') ~> derivedColumnIsActive",
						"sourceEmpDataTable select(mapColumn(",
						"          Tgt_Surrkey = Surrkey,",
						"          Tgt_EmpId = EmpId,",
						"          Tgt_Ename = Ename,",
						"          Tgt_Salary = Salary,",
						"          Tgt_IsActive = IsActive",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> selectTableColums",
						"sourceEmpData, selectTableColums lookup(EmpId == Tgt_EmpId,",
						"     multiple: true,",
						"     broadcast: 'auto')~> lookupSourceFileData",
						"lookupSourceFileData filter(!isNull(Tgt_EmpId)) ~> filterExistingRow",
						"filterExistingRow select(mapColumn(",
						"          Tgt_Surrkey,",
						"          Tgt_EmpId,",
						"          Tgt_Ename,",
						"          Tgt_Salary,",
						"          Tgt_IsActive",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> selectTableColumns",
						"selectTableColumns derive(Tgt_IsActive = 'N') ~> derivedIsActiveColumn",
						"derivedIsActiveColumn alterRow(updateIf(1==1)) ~> alterRowUpdateRow",
						"derivedColumnIsActive sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Surrkey as integer,",
						"          EmpId as integer,",
						"          Ename as string,",
						"          Salary as integer,",
						"          IsActive as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     saveOrder: 2,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          EmpId,",
						"          Ename = EmpName,",
						"          Salary = EmpSalary,",
						"          IsActive",
						"     )) ~> sinkEmpTable",
						"alterRowUpdateRow sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Surrkey as integer,",
						"          EmpId as integer,",
						"          Ename as string,",
						"          Salary as integer,",
						"          IsActive as string",
						"     ),",
						"     deletable:false,",
						"     insertable:false,",
						"     updateable:true,",
						"     upsertable:false,",
						"     keys:['Surrkey'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     saveOrder: 1,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          Surrkey = Tgt_Surrkey,",
						"          EmpId = Tgt_EmpId,",
						"          Ename = Tgt_Ename,",
						"          Salary = Tgt_Salary,",
						"          IsActive = Tgt_IsActive",
						"     )) ~> sinkEmpDataTable1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/dsEmpData')]",
				"[concat(variables('factoryId'), '/datasets/dsEmpTable')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_castTransformatio')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "dsLoadAzureTable",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "cast1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          {Customer Id} as integer,",
						"          Age as integer,",
						"          City as string,",
						"          State as string,",
						"          Name as string,",
						"          FileName as string,",
						"          InsertTimeStamp as date",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> source1",
						"source1 cast(output(",
						"          {Customer Id} as integer,",
						"          Age as integer,",
						"          City as string,",
						"          State as string,",
						"          Name as string,",
						"          FileName as string,",
						"          InsertTimeStamp as date 'dd-MM-yyyy'",
						"     ),",
						"     errors: true) ~> cast1",
						"cast1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable1')]",
				"[concat(variables('factoryId'), '/datasets/dsLoadAzureTable')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_compareSourceTarget')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DelimitedText7",
								"type": "DatasetReference"
							},
							"name": "sourceFileData"
						},
						{
							"dataset": {
								"referenceName": "AzureSqlTable5",
								"type": "DatasetReference"
							},
							"name": "targetTableData"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DelimitedText8",
								"type": "DatasetReference"
							},
							"name": "sinkNotMatchingRecords"
						}
					],
					"transformations": [
						{
							"name": "hashColumnSource"
						},
						{
							"name": "hashTargetColumns"
						},
						{
							"name": "existsDataSourceInTarget"
						}
					],
					"scriptLines": [
						"source(output(",
						"          SN as string,",
						"          {First Name} as string,",
						"          {Last Name} as string,",
						"          Gender as string,",
						"          Country as string,",
						"          Age as string,",
						"          Date as string,",
						"          Id as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> sourceFileData",
						"source(output(",
						"          SN as string,",
						"          FirstName as string,",
						"          LastName as string,",
						"          Gender as string,",
						"          Country as string,",
						"          Age as string,",
						"          Date as string,",
						"          Id as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> targetTableData",
						"sourceFileData derive(HashColumnSourceFile = sha2(256,columns())) ~> hashColumnSource",
						"targetTableData derive(HashTargetColumns = sha2(256,columns())) ~> hashTargetColumns",
						"hashColumnSource, hashTargetColumns exists(HashColumnSourceFile == HashTargetColumns,",
						"     negate:true,",
						"     broadcast: 'auto')~> existsDataSourceInTarget",
						"existsDataSourceInTarget sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          CustomerId as string,",
						"          Age as string,",
						"          City as string,",
						"          State as string,",
						"          Name as string,",
						"          FileName as string,",
						"          InsertTimeStamp as string",
						"     ),",
						"     partitionFileNames:['NotMatchingRecords.csv'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> sinkNotMatchingRecords"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DelimitedText7')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable5')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedText8')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_splitRowIntoMultipleRows')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DelimitedText3",
								"type": "DatasetReference"
							},
							"name": "sourceMultipleValuesColumnfile"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DelimitedText4",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						},
						{
							"name": "flatten1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          EmpId as string,",
						"          EmpName as string,",
						"          Skills as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> sourceMultipleValuesColumnfile",
						"sourceMultipleValuesColumnfile derive(Skills = split(Skills,\",\")) ~> derivedColumn1",
						"derivedColumn1 foldDown(unroll(Skills),",
						"     mapColumn(",
						"          EmpId,",
						"          EmpName,",
						"          Skills",
						"     ),",
						"     skipDuplicateMapInputs: false,",
						"     skipDuplicateMapOutputs: false) ~> flatten1",
						"flatten1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Name as string,",
						"          Category as string,",
						"          Status as string,",
						"          Error as string",
						"     ),",
						"     partitionFileNames:['FlattanFileOutput.csv'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DelimitedText3')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedText4')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_031_WaitActivityDemo')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [
							{
								"name": "WaitActivityForSomeTime",
								"value": "5"
							}
						],
						"typeProperties": {
							"waitTimeInSeconds": 5
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": []
		}
	]
}